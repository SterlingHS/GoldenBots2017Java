// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6651.TestDrive;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTSpeedController0;
    public static SpeedController driveTSpeedController1;
    public static SpeedController driveTSpeedController2;
    public static SpeedController driveTSpeedController3;
    public static RobotDrive driveTRobotDrive;
    public static SpeedController intakeSpeedController1;
    public static SpeedController outputSpeedController1;
    public static SpeedController climberSpeedController1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTSpeedController0 = new Spark(0);
        LiveWindow.addActuator("DriveT", "Speed Controller 0", (Spark) driveTSpeedController0);
        
        driveTSpeedController1 = new Spark(1);
        LiveWindow.addActuator("DriveT", "Speed Controller 1", (Spark) driveTSpeedController1);
        
        driveTSpeedController2 = new Spark(2);
        LiveWindow.addActuator("DriveT", "Speed Controller 2", (Spark) driveTSpeedController2);
        
        driveTSpeedController3 = new Spark(3);
        LiveWindow.addActuator("DriveT", "Speed Controller 3", (Spark) driveTSpeedController3);
        
        driveTRobotDrive = new RobotDrive(driveTSpeedController0, driveTSpeedController1,
              driveTSpeedController2, driveTSpeedController3);
        
        driveTRobotDrive.setSafetyEnabled(true);
        driveTRobotDrive.setExpiration(0.1);
        driveTRobotDrive.setSensitivity(0.5);
        driveTRobotDrive.setMaxOutput(0.8);

        intakeSpeedController1 = new Spark(4);
        LiveWindow.addActuator("Intake", "Speed Controller 1", (Spark) intakeSpeedController1);
        
        outputSpeedController1 = new Spark(5);
        LiveWindow.addActuator("Output", "Speed Controller 1", (Spark) outputSpeedController1);
        
        climberSpeedController1 = new Spark(6);
        LiveWindow.addActuator("Climber", "Speed Controller 1", (Spark) climberSpeedController1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
