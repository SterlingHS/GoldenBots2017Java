// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6651.TestDrive.subsystems;

import org.usfirst.frc6651.TestDrive.RobotMap;
import org.usfirst.frc6651.TestDrive.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 *
 */
public class DriveT extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController0 = RobotMap.driveTSpeedController0;
    private final SpeedController speedController1 = RobotMap.driveTSpeedController1;
    private final SpeedController speedController2 = RobotMap.driveTSpeedController2;
    private final SpeedController speedController3 = RobotMap.driveTSpeedController3;
    private final RobotDrive robotDrive = RobotMap.driveTRobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ArcadeDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void arcadeDrive(Joystick stick) {
    	
    	if(stick.getRawButton(3))
    	{
    		robotDrive.arcadeDrive(stick.getY() * .3, stick.getX());
    	}
    	else
    	{
    		robotDrive.arcadeDrive(stick.getY(), stick.getX());
    	}
    		
    }
    
    
    
    public void autoDrive(double left, double right) {
    	speedController0.set(left);
    	speedController1.set(left);
    	speedController2.set(right);
    	speedController3.set(right);
    }

    
}

